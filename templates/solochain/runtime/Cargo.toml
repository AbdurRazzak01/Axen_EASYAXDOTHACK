[package]
name = "solochain-template-runtime"
version = "0.0.0"
description = "A solochain runtime template built with Substrate, part of Polkadot SDK."
license = "Unlicense"
publish = false
edition = "2021"

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]

[dependencies]
# Basic
codec = { workspace = true, features = ["derive"] }
scale-info = { workspace = true, features = ["derive", "serde"] }
serde_json = { workspace = true, default-features = false, features = ["alloc"] }

# FRAME core
frame-executive = { workspace = true }
frame-support = { workspace = true, features = ["experimental"] }
frame-system = { workspace = true }
frame-metadata-hash-extension = { workspace = true }
frame-try-runtime = { workspace = true, optional = true }

# Pallets
pallet-aura = { workspace = true }
pallet-balances = { workspace = true }
pallet-grandpa = { workspace = true }
pallet-sudo = { workspace = true }
pallet-timestamp = { workspace = true }
pallet-transaction-payment = { workspace = true }
pallet-template = { workspace = true }
mypallet = { path = "../pallets/mypallet" }

# Primitives
sp-api = { workspace = true }
sp-block-builder = { workspace = true }
sp-consensus-aura = { workspace = true, features = ["serde"] }
sp-consensus-grandpa = { workspace = true, features = ["serde"] }
sp-core = { workspace = true, features = ["serde"] }
sp-genesis-builder = { workspace = true }
sp-inherents = { workspace = true }
sp-keyring = { workspace = true }
sp-offchain = { workspace = true }
sp-runtime = { workspace = true, features = ["serde"] }
sp-session = { workspace = true }
sp-storage = { workspace = true }
sp-transaction-pool = { workspace = true }
sp-version = { workspace = true, features = ["serde"] }

# RPC-related
frame-system-rpc-runtime-api = { workspace = true }
pallet-transaction-payment-rpc-runtime-api = { workspace = true }

# Benchmarking (Optional)
frame-benchmarking = { workspace = true, optional = true }
frame-system-benchmarking = { workspace = true, optional = true }

# Wasm builder
substrate-wasm-builder = { workspace = true, optional = true, default-features = true }

[build-dependencies]
substrate-wasm-builder = { workspace = true }

[features]
default = ["std"]

std = [
    "codec/std",
    "frame-executive/std",
    "frame-support/std",
    "frame-system/std",
    "frame-metadata-hash-extension/std",
    "frame-system-rpc-runtime-api/std",
    "frame-try-runtime?/std",
    "pallet-aura/std",
    "pallet-balances/std",
    "pallet-grandpa/std",
    "pallet-sudo/std",
    "pallet-template/std",
    "pallet-timestamp/std",
    "pallet-transaction-payment/std",
    "pallet-transaction-payment-rpc-runtime-api/std",
    "mypallet/std",
    "scale-info/std",
    "serde_json/std",
    "sp-api/std",
    "sp-block-builder/std",
    "sp-consensus-aura/std",
    "sp-consensus-grandpa/std",
    "sp-core/std",
    "sp-genesis-builder/std",
    "sp-inherents/std",
    "sp-keyring/std",
    "sp-offchain/std",
    "sp-runtime/std",
    "sp-session/std",
    "sp-storage/std",
    "sp-transaction-pool/std",
    "sp-version/std",
]

runtime-benchmarks = [
    "frame-benchmarking/runtime-benchmarks",
    "frame-system-benchmarking/runtime-benchmarks",
    "pallet-balances/runtime-benchmarks",
    "pallet-grandpa/runtime-benchmarks",
    "pallet-sudo/runtime-benchmarks",
    "pallet-template/runtime-benchmarks",
    "pallet-timestamp/runtime-benchmarks",
    "pallet-transaction-payment/runtime-benchmarks",
    "sp-runtime/runtime-benchmarks"
]

try-runtime = [
    "frame-executive/try-runtime",
    "frame-support/try-runtime",
    "frame-system/try-runtime",
    "frame-try-runtime/try-runtime",
    "pallet-aura/try-runtime",
    "pallet-balances/try-runtime",
    "pallet-grandpa/try-runtime",
    "pallet-sudo/try-runtime",
    "pallet-template/try-runtime",
    "pallet-timestamp/try-runtime",
    "pallet-transaction-payment/try-runtime",
    "sp-runtime/try-runtime",
]

# Enables metadata hashing for runtime
metadata-hash = ["substrate-wasm-builder/metadata-hash"]

# Convenience feature
on-chain-release-build = ["metadata-hash", "sp-api/disable-logging"]
